import os
from telebot import TeleBot
from telebot import types
import telebot
import sqlite3
from dotenv import load_dotenv
from time import sleep
from datetime import datetime
load_dotenv()

bot = TeleBot(os.getenv("TOKEN"))

def check_users(msg: message) -> bool:
    try:    
        with sqlite3.connect("database.db") as db:
            db.cursor().execute(f"SELECT username FROM users")
            if msg.from_user.username not in db.cursor().fetchall():
                db.cursor().execute(f"INSERT INTO intrested (tgid, username, last_name, first_name, time), 
                VALUES ({str(msg.from_user.id)}, {msg.from_user.username}, {msg.from_user.last_name}, {msg.from_user.first_name}, {' '.join(str(datetime.now()).split(".")[:-1])})")
                db.commit()
                bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω, –µ—Å–ª–∏ –≤–∞—à–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∫–∞–∫ –ø–æ–Ω—è—Ç–∏–µ —á–∏—Å—Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")
                return False
            else:
                return True
    except sqlite3.Error:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")

def get_db_data(table: str, option: str, value: str):
    try:
        with sqlite.connect("database.db") as db:
            db.cursor().execute(f"SELECT * FROM {table} WHERE {option}={value}")
            data = db.cursor().fetchall()
            return {"name": data[1] if data[1] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "born": data[2] if data[2] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "number": data[3] if data[3] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "email": data[4] if data[4] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "tgid": data[5] if data[5] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "tgun": data[6] if data[6] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "vkid": data[7] if data[7] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "okid": data[8] if data[8] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "instid": data[9] if data[9] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "fbid": data[10] if data[10] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "snpas": data[11] if data[11] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "inn": data[12] if data[12] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ", 
                    "snils": data[13] if data[13] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "card": data[14] if data[14] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "addr": data[15] if data[15] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ",
                    "org": data[16] if data[16] != '' else: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"}
    except sqlite3.Error:
        return False


def get_report(data: dict) -> str:
    return f""" 
<b>‚úÖ–û—Ç—á–µ—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:</b>
    
üë§ <b>–§–ò–û:</b> <code>{data['name']}</code>
    
üè• <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> <code>{data['born']}</code>

üìû <b>–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> <code>{data['number']}</code>

üìß <b>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –ø–æ—á—Ç—ã:</b> <code>{data['email']}</code>

üåê <b>–°–æ—Ü—Å–µ—Ç–∏:</b>
    |    
    |- <b>Telegram:</b> <code>{data['tgid']}</code>
    |    
    |- <b>Instagram:</b> <code>{data["instid"]}</code>

        

‚ùó–ï—Å–ª–∏ —É –≤–∞—Å –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–∞–±–æ—Ç–æ–π –±–æ—Ç–∞, –∏–ª–∏ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—é –ª–µ–ø—Ç—É –≤ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∫–∞–∫ –ø–æ–Ω—è—Ç–∏—è —Ç.–µ 
  –¥–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –ø–∏—à–∏—Ç–µ –≤ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É
"""


@bot.message_handler(commands=["start"])
def get_start(message):
    if check_users(): 
        bot.send_message(message.chat.id, "–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç DataBot, –≤–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å –≤ –Ω–∏–∂–µ—É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        bot.send_message(message.chat.id, "–°–ø—Ä–∞–≤–∫–∞")

@bot.message_handler(commands=["help"])
def get_manual(message):
    if check_users():
        msg = bot.send_message(message.chat.id, "")
@bot.message_handler(content_types=["text"])
def handler(message):
    if check_users():
        elif len(message.text) == 11:
            msg = bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.. ")
            bot.edit_message_text(get_report(get_db_data("people", "number", message.text)), chat_id=message.chat.id,
            message_id=msg.message_id, parse_mode="html")
        elif "@" in message.text and "." in message.text:
            msg = bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.. ")
            bot.edit_message_text(get_report(get_db_data("people", "email", message.text)), chat_id=message.chat.id,
            message_id=msg.message_id, parse_mode="html")
        elif "@" in message.text:
            msg = bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.. ")
            bot.edit_message_text(get_report(get_db_data("people", "tgun", message.text)), chat_id=message.chat.id,
            message_id=msg.message_id, parse_mode="html")
        elif "vk.com" in message.text:

def main():
    bot.infinity_polling()

if __name__ == '__main__':
    main()
